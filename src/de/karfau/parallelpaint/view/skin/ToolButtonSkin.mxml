<?xml version="1.0" encoding="utf-8"?>

<!--

		 ADOBE SYSTEMS INCORPORATED
		 Copyright 2008 Adobe Systems Incorporated
		 All Rights Reserved.

		 NOTICE: Adobe permits you to use, modify, and distribute this file
		 in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for a Spark ToggleButton component.

		 @see spark.components.ToggleButton

		 @langversion 3.0
		 @playerversion Flash 10
		 @playerversion AIR 1.5
		 @productversion Flex 4
-->
<s:SparkSkin xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
	xmlns:fx="http://ns.adobe.com/mxml/2009"
	xmlns:s="library://ns.adobe.com/flex/spark"
	minWidth="21" minHeight="21"
	alpha.disabledStates="0.5">
	<fx:Metadata>[HostComponent("de.karfau.parallelpaint.view.components.tools.ToolButton")]</fx:Metadata>

	<!-- host component -->
	<!-- states -->
	<s:states>
        <s:State name="up"/>
        <s:State name="over" stateGroups="overStates"/>
        <s:State name="down" stateGroups="downStates"/>
        <s:State name="disabled" stateGroups="disabledStates"/>
        <s:State name="upAndSelected" stateGroups="selectedStates, selectedUpStates"/>
        <s:State name="overAndSelected" stateGroups="overStates, selectedStates"/>
        <s:State name="downAndSelected" stateGroups="downStates, selectedStates"/>
        <s:State name="disabledAndSelected" stateGroups="selectedUpStates, disabledStates, selectedStates"/>
    </s:states>

	<!-- layer 1: shadow -->
	<!--- @private -->
	<s:Rect id="shadow"
		top="-1" bottom="-1" left="-1" right="-1"
		radiusX="2">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="0x000000" color.downStates="0xFFFFFF" alpha="0.01" alpha.downStates="0"/>
				<s:GradientEntry color="0x000000" color.downStates="0xFFFFFF" alpha="0.07" alpha.downStates="0.5"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>

	<!-- layer 2: fill -->
	<!--- @private -->
	<s:Rect id="fill"
		top="1" bottom="1" left="1" right="1"
		radiusX="2">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="0xFFFFFF" color.downStates="0xAAAAAA" color.overStates="0xBBBDBD" color.selectedUpStates="0xBBBDBD"
					alpha="0.85" alpha.overAndSelected="1"/>
				<s:GradientEntry color="0xD8D8D8" color.downStates="0x929496" color.over="0x9FA0A1" color.overAndSelected="0x8E8F90"
					color.selectedUpStates="0x9FA0A1"
					alpha="0.85" alpha.overAndSelected="1"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>

	<!-- layer 3: fill lowlight -->
	<!--- @private -->
	<s:Rect id="lowlight"
		top="1" bottom="1" left="1" right="1"
		radiusX="2">
		<s:fill>
			<s:LinearGradient rotation="270">
				<s:GradientEntry color="0x000000" alpha="0.0627" ratio="0.0"/>
				<s:GradientEntry color="0x000000" alpha="0.0099" ratio="0.48"/>
				<s:GradientEntry color="0x000000" alpha="0" ratio="0.48001"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>

	<!-- layer 4: fill highlight -->
	<!--- @private -->
	<s:Rect id="highlight"
		top="1" bottom="1" left="1" right="1"
		radiusX="2">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="0xFFFFFF"
					alpha="0.33" alpha.downStates="0.12" alpha.overStates="0.22" alpha.selectedUpStates="0.22" ratio="0.0"/>
				<s:GradientEntry color="0xFFFFFF"
					alpha="0.33" alpha.downStates="0.12" alpha.overStates="0.22" alpha.selectedUpStates="0.22" ratio="0.48"/>
				<s:GradientEntry color="0xFFFFFF" alpha="0" ratio="0.48001"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>

	<!-- layer 5: highlight stroke (all states except down) -->
	<!--- @private -->
	<s:Rect id="highlightStroke"
		top="1" bottom="1" left="1" right="1"
		excludeFrom="downStates" radiusX="2">
		<s:stroke>
			<s:LinearGradientStroke rotation="90" weight="1">
				<s:GradientEntry color="0xFFFFFF" alpha.overStates="0.22" alpha.selectedUpStates="0.33"/>
				<s:GradientEntry color="0xD8D8D8" alpha.overStates="0.22" alpha.selectedUpStates="0.33"/>
			</s:LinearGradientStroke>
		</s:stroke>
	</s:Rect>

	<!-- layer 6: highlight stroke (down state only) -->
	<!--- @private -->
	<s:Rect id="hldownstroke1"
		top="1" bottom="1" left="1" right="1"
		includeIn="downStates, selectedUpStates, overAndSelected" radiusX="2">
		<s:stroke>
			<s:LinearGradientStroke rotation="90" weight="1">
				<s:GradientEntry color="0x000000" alpha="0.25" ratio="0.0"/>
				<s:GradientEntry color="0x000000" alpha="0.25" ratio="0.001"/>
				<s:GradientEntry color="0x000000" alpha="0.07" ratio="0.0011"/>
				<s:GradientEntry color="0x000000" alpha="0.07" ratio="0.965"/>
				<s:GradientEntry color="0x000000" alpha="0.00" ratio="0.9651"/>
			</s:LinearGradientStroke>
		</s:stroke>
	</s:Rect>
	<!--- @private -->
	<s:Rect id="hldownstroke2"
		top="2" bottom="2" left="2" right="2"
		includeIn="downStates, selectedUpStates, overAndSelected" radiusX="2">
		<s:stroke>
			<s:LinearGradientStroke rotation="90" weight="1">
				<s:GradientEntry color="0x000000" alpha="0.09" ratio="0.0"/>
				<s:GradientEntry color="0x000000" alpha="0.00" ratio="0.0001"/>
			</s:LinearGradientStroke>
		</s:stroke>
	</s:Rect>

	<!-- layer 7: border - put on top of the fill so it doesn't disappear when scale is less than 1 -->
	<!--- @private -->
	<s:Rect id="border"
		top="0" bottom="0" left="0" right="0" width="20" height="20"
		radiusX="2">
		<s:stroke>
			<s:LinearGradientStroke rotation="90" weight="1">
				<s:GradientEntry color="0x000000" alpha="0.5625" alpha.down="0.6375" alpha.selectedStates="0.6375"/>
				<s:GradientEntry color="0x000000" alpha="0.75" alpha.down="0.85" alpha.selectedStates="0.85"/>
			</s:LinearGradientStroke>
		</s:stroke>
	</s:Rect>
	<s:HGroup id="contentLayout"
		top="2" bottom="2" left="10" right="10"
		toolTip="{hostComponent.tool.label}">
		<s:BitmapImage id="iconDisplay" source="{hostComponent.tool.icon}"
			includeInLayout="{hostComponent.tool.icon != null}" visible="{hostComponent.tool.icon != null}"/>
		<!-- layer 8: text -->
		<!--- @copy spark.components.supportClasses.ButtonBase#labelDisplay -->
		<s:Label id="labelDisplay" text="{hostComponent.tool.label}"
			horizontalCenter="0" textAlign="center" verticalAlign="middle" verticalCenter="1"
			includeInLayout="{hostComponent.tool.icon == null}" maxDisplayedLines="1" visible="{hostComponent.tool.icon == null}">
		</s:Label>
	</s:HGroup>

</s:SparkSkin>
