<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:components="de.karfau.parallelpaint.view.components.*"
	xmlns:core="de.karfau.parallelpaint.core.*"
	xmlns:fx="http://ns.adobe.com/mxml/2009"
	xmlns:mx="library://ns.adobe.com/flex/mx"
	xmlns:s="library://ns.adobe.com/flex/spark"
	width="100%" height="100%"
	creationComplete="creationCompleteHandler(event)" focusIn="focusHandler(event)" focusOut="focusHandler(event)"
	focusEnabled="true" viewSourceURL="srcview/index.html">

	<fx:Script>
		<![CDATA[
			import de.karfau.flexlogplus.*;

			import mx.core.UIComponentGlobals;
			import mx.events.FlexEvent;
			import mx.managers.IFocusManagerComponent;

			protected function creationCompleteHandler (event:FlexEvent):void {
				/*To enable listening to Keyboardevents we try the following things:
				A) focusEnabled is set to TRUE for this object and to FALSE for all visible children
				B) on creationComplete we call a JavaScript-function (defined here) to set the focus to the swf (inside the html)
				C) on creationComplete we set the focus to this object (wich works asynchronous, see traceStageFocus() )
				D) the mediator listens to the keyEvents in the capture-phase
				*/
				ExternalInterface.call("function browserFocus(){document.getElementById('index').focus();}");
				this.setFocus();
				traceStageFocus();
			}

			protected function focusHandler (event:FocusEvent):void {
				verbose(this, ".focusHandler({0}) ", event);
			}

			protected function traceStageFocus():void{
				if(stage){
					if(stage.focus)
						ludicrous(this,".traceStageFocus() stage.focus is set to {0} (=== this:{1})",stage.focus,stage.focus==this);
					else{
						ludicrous(this,".traceStageFocus() stage is set but not stage.focus, calling it again");
						callLater(traceStageFocus);
					}
				}else{
					ludicrous(this,".traceStageFocus( ) was called but stage was not set");
					callLater(traceStageFocus);
				}
			}
		]]>
	</fx:Script>


	<fx:Declarations>
		<core:PaintContext id="paintContext" contextView="{this}"/>
	</fx:Declarations>
	<fx:Style>
		@namespace layers "de.karfau.parallelpaint.view.components.layers.*";
		@namespace mx "library://ns.adobe.com/flex/mx";
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace tools "de.karfau.parallelpaint.view.components.tools.*";
		 tools|ToolButton{
			 skin-class:ClassReference("de.karfau.parallelpaint.view.skin.ToolButtonSkin");
		 }
	</fx:Style>
	<components:DrawingEditor id="editor" width="100%" height="100%" focusEnabled="false"/>
</s:Application>
